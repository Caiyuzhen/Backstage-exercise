{"ast":null,"code":"var _jsxFileName = \"/Users/zen/Desktop/Backstage-exercise/src/pages/Layout/index.js\",\n    _s = $RefreshSig$();\n\nimport { Layout, Menu, Popconfirm } from 'antd';\nimport { HomeOutlined, DiffOutlined, EditOutlined, LogoutOutlined } from '@ant-design/icons';\nimport './index.scss';\nimport { Outlet, Link, useLocation, useNavigate } from 'react-router-dom'; // ⚡️⚡️配置二级路由出口！\n\nimport { useStore } from '@/store';\nimport { useEffect } from 'react';\nimport { observer } from 'mobx-react-lite'; //🔥🔥连接：用来刷新页面的时候去动态的获取接口回调的数据（比如用户名在异步渲染出来后会更新视图）\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Sider\n} = Layout; //Layout 包含了 header Sidebar Content Footer 几个子组件\n\nfunction MainLayout() {\n  _s();\n\n  // const  pathLocation  = useLocation() //这是定义一个变量，跟用对象来解构赋值不一样,先用这个方式可以看到这个变量里边有什么对象，然后再去解构赋值\n  // console.log(pathLocation);\n  const {\n    pathname\n  } = useLocation(); //从 react 组件中解构出 pathname 的值\n\n  const {\n    userInfoStore,\n    loginStore\n  } = useStore(); //从根 store 中解构出 {userInfoStore} 、{loginStore} 两个对象\n\n  const useNavigate = use; //利用函数的副作用 hook 来获取用户信息\n\n  useEffect(() => {\n    userInfoStore.getUserInfo(); //🔥🔥🔥 从 userInfoStore 组件中调用 getUserInfo() 方法来获取接口内的参数\n\n    console.log(userInfoStore.userInfo.name); //在函数初始化的时候会自动执行，所以已经拿到值了\n  }, [userInfoStore]); //拿到数据，再去 <span></span> 内进行渲染\n  //气泡框，确定退出登录\n\n  const onPopConfirm = () => {\n    //退出登录的业务逻辑\n    //1.删除 login.Store 内的 token\n    loginStore.deleteToken(); //2.跳转回到登录页 useNavigate 方法\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"user-name\",\n          children: [\" \", userInfoStore.userInfo.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"user-logout\",\n          children: /*#__PURE__*/_jsxDEV(Popconfirm, {\n            title: \"Confirm to logout\\uFF1F\",\n            okText: \"Exit\",\n            cancelText: \"Cancel\",\n            children: [\"onConfirm=\", onPopConfirm, /*#__PURE__*/_jsxDEV(LogoutOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 12\n            }, this), \" Exit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Sider, {\n        width: 200,\n        className: \"site-layout-background\",\n        children: /*#__PURE__*/_jsxDEV(Menu, {\n          className: \"menu-background\",\n          mode: \"inline\",\n          theme: \"dark\",\n          defaultSelectedKeys: [pathname] //.🔥高亮原理: defaultSelectedKeys === item key (下面的 key), 因此需要获取当前激活的 path 路径, 可以通过 useLocation 来获取当前要激活哪个二级路有\n          ,\n          style: {\n            height: '100%',\n            borderRight: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n            icon: /*#__PURE__*/_jsxDEV(HomeOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 24\n            }, this),\n            className: \"menuitem\",\n            children: [\"   \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \" Home \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 75\n            }, this), \"  \"]\n          }, \"/\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n            icon: /*#__PURE__*/_jsxDEV(DiffOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 24\n            }, this),\n            className: \"menuitem\",\n            children: [\"   \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/article\",\n              children: \" Article\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 82\n            }, this), \"       \"]\n          }, \"/article\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n            icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 24\n            }, this),\n            className: \"menuitem\",\n            children: [\"   \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"publish\",\n              children: \" Pubilsh \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 82\n            }, this), \"      \"]\n          }, \"/publish\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {\n        className: \"layout-content\",\n        style: {\n          padding: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MainLayout, \"u/1R48dTkoB8C19vxrK+kVKZidE=\", false, function () {\n  return [useLocation, useStore];\n});\n\n_c = MainLayout;\nexport default _c2 = observer(MainLayout);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MainLayout\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["Layout","Menu","Popconfirm","HomeOutlined","DiffOutlined","EditOutlined","LogoutOutlined","Outlet","Link","useLocation","useNavigate","useStore","useEffect","observer","Header","Sider","MainLayout","pathname","userInfoStore","loginStore","use","getUserInfo","console","log","userInfo","name","onPopConfirm","deleteToken","height","borderRight","padding"],"sources":["/Users/zen/Desktop/Backstage-exercise/src/pages/Layout/index.js"],"sourcesContent":["import { Layout , Menu, Popconfirm } from 'antd'\nimport { HomeOutlined, DiffOutlined, EditOutlined, LogoutOutlined } from '@ant-design/icons'\nimport './index.scss'\nimport { Outlet,Link,useLocation,useNavigate } from 'react-router-dom'// ⚡️⚡️配置二级路由出口！\nimport { useStore } from '@/store'\nimport { useEffect } from 'react'\nimport { observer } from 'mobx-react-lite' //🔥🔥连接：用来刷新页面的时候去动态的获取接口回调的数据（比如用户名在异步渲染出来后会更新视图）\n\n\nconst { Header , Sider } = Layout  //Layout 包含了 header Sidebar Content Footer 几个子组件\n\n\n\nfunction MainLayout() {\n\n\t// const  pathLocation  = useLocation() //这是定义一个变量，跟用对象来解构赋值不一样,先用这个方式可以看到这个变量里边有什么对象，然后再去解构赋值\n\t// console.log(pathLocation);\n\tconst { pathname } = useLocation() //从 react 组件中解构出 pathname 的值\n\tconst { userInfoStore,loginStore } = useStore() //从根 store 中解构出 {userInfoStore} 、{loginStore} 两个对象\n\tconst useNavigate = use\n\n\t//利用函数的副作用 hook 来获取用户信息\n\tuseEffect(()=>{\n\t\tuserInfoStore.getUserInfo() //🔥🔥🔥 从 userInfoStore 组件中调用 getUserInfo() 方法来获取接口内的参数\n\t\tconsole.log(userInfoStore.userInfo.name) //在函数初始化的时候会自动执行，所以已经拿到值了\n\n\t},[userInfoStore]) //拿到数据，再去 <span></span> 内进行渲染\n\n\t\n\t//气泡框，确定退出登录\n\tconst onPopConfirm =()=>{\n\t\t//退出登录的业务逻辑\n\t\t//1.删除 login.Store 内的 token\n\t\tloginStore.deleteToken()\n\t\t//2.跳转回到登录页 useNavigate 方法\n\n\t}\n\n\n\n\treturn (\t\t\n\t\t<Layout>\n\t\t\t{/* 顶部 */}\n\t\t\t<Header className=\"header\">\n\t\t\t\t<div className=\"logo\" />\n\t\t\t\t<div className=\"user-info\">\n\t\t\t\t\t<span className=\"user-name\"> {userInfoStore.userInfo.name} </span>\n\t\t\t\t\t<span className=\"user-logout\">\n\t\t\t\t\t    <Popconfirm \n\t\t\t\t\t\t\ttitle=\"Confirm to logout？\" \n\t\t\t\t\t\t\tokText=\"Exit\" \n\t\t\t\t\t\t\tcancelText=\"Cancel\">\n\t\t\t\t\t\t\tonConfirm={onPopConfirm}\n\t\t\t\t\t\t    {/* popover 弹窗 */}\n\t\t\t\t\t\t    \t<LogoutOutlined /> Exit \n\t\t\t\t\t    </Popconfirm>\n\t\t\t        </span>\n\t\t\t\t</div>\n\t\t\t</Header>\n\t\t\t\n\t\t\t{/* 底部 */}\n\t\t\t<Layout>\n\t\t\t\t{/* 侧边栏 */}\n\t\t\t\t<Sider width={200} className=\"site-layout-background\">\n\t\t\t\t\t<Menu\n\t\t\t\t\t\tclassName=\"menu-background\"\n\t\t\t\t\t\tmode=\"inline\"\n\t\t\t\t\t\ttheme=\"dark\"\n\t\t\t\t\t\tdefaultSelectedKeys={[pathname]} //.🔥高亮原理: defaultSelectedKeys === item key (下面的 key), 因此需要获取当前激活的 path 路径, 可以通过 useLocation 来获取当前要激活哪个二级路有\n\t\t\t\t\t\tstyle={{ height: '100%', borderRight: 0 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* 🔥🔥导入 Link 组件进行包裹, 配置 to='/' 属性来实现点击后的跳转！ */}\n\t\t\t\t\t\t<Menu.Item icon={<HomeOutlined />} key=\"/\"  className=\"menuitem\">   <Link to='/'> Home </Link>  </Menu.Item>\n\t\t\t\t\t\t<Menu.Item icon={<DiffOutlined />} key=\"/article\"  className=\"menuitem\">   <Link to='/article'> Article</Link>       </Menu.Item>\n\t\t\t\t\t\t<Menu.Item icon={<EditOutlined />} key=\"/publish\"  className=\"menuitem\">   <Link to='publish'> Pubilsh </Link>      </Menu.Item>\n\t\t\t\t\t</Menu>\n\t\t\t\t</Sider>\n\t\t\t\t\n\t\t\t\t{/* 内容区 */}\n\t\t\t\t<Layout className=\"layout-content\" style={{ padding: 20 }}>\n\t\t\t\t\t{/* ⚡️⚡️在内容区域记的配置二级路由出口！！！ */}\n\t\t\t\t\t<Outlet/>\n\t\t\t\t</Layout>\n\t\t\t</Layout>\n\t\t</Layout>\n\n\t)\n}\n\nexport default observer(MainLayout)"],"mappings":"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"},"metadata":{},"sourceType":"module"}