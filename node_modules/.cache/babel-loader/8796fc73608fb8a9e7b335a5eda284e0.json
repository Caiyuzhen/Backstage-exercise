{"ast":null,"code":"var _jsxFileName = \"/Users/zen/Desktop/Backstage-exercise/src/pages/Home/index.js\";\nimport './index.scss';\nimport Bar from '@/components/EchartBar'; //记得是用 @ + / 进行导入\n//思路：\n//1.把 echarts 加入项目(需要在 react 中获取 DOM 元素, 用 useRef 方法获取，在 useEffect 时机去渲染 DOM 节点)\n//2.先不抽离定制化的参数，把最小化的 demo 跑起来\n//3.按照需求，抽象出自定义的参数进行封装，让用户可以自定义传参来生成图表\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Bar, {\n      title: \"\\u6EE1\\u610F\\u5EA6\",\n      xData: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      title: \"\\u6EE1\\u610F\\u5EA6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Bar","Home"],"sources":["/Users/zen/Desktop/Backstage-exercise/src/pages/Home/index.js"],"sourcesContent":["import './index.scss'\nimport Bar from '@/components/EchartBar' //记得是用 @ + / 进行导入\n\n//思路：\n//1.把 echarts 加入项目(需要在 react 中获取 DOM 元素, 用 useRef 方法获取，在 useEffect 时机去渲染 DOM 节点)\n//2.先不抽离定制化的参数，把最小化的 demo 跑起来\n//3.按照需求，抽象出自定义的参数进行封装，让用户可以自定义传参来生成图表\n\n\n\nconst Home = () => {\n\n\treturn( \n\t\t<div>\n\t\t\t{/* 👇渲染图表组件, 因为做了抽象，可以自由的传递参数！ */}\n\t\t\t<Bar title=\"满意度\" xData/>\n\t\t\t<Bar title=\"满意度\"/>\n\t\t</div>\n\t)\n}\n\nexport default Home"],"mappings":";AAAA,OAAO,cAAP;AACA,OAAOA,GAAP,MAAgB,wBAAhB,C,CAAyC;AAEzC;AACA;AACA;AACA;;;;AAIA,MAAMC,IAAI,GAAG,MAAM;EAElB,oBACC;IAAA,wBAEC,QAAC,GAAD;MAAK,KAAK,EAAC,oBAAX;MAAiB,KAAK;IAAtB;MAAA;MAAA;MAAA;IAAA,QAFD,eAGC,QAAC,GAAD;MAAK,KAAK,EAAC;IAAX;MAAA;MAAA;MAAA;IAAA,QAHD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAOA,CATD;;KAAMA,I;AAWN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}