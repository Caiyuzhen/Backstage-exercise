{"ast":null,"code":"var path = require('path');\n\nvar Koa = require('koa');\n\nvar Router = require('koa-router');\n\nvar app = new Koa();\nvar router = new Router();\n\nfunction output(r) {\n  var data = typeof r === 'function' ? r.call(this, this.request, this.response) : r;\n  data = data && JSON.stringify(data, '', 4);\n  var callback = this.request.query.callback;\n\n  if (data && callback) {\n    data = `${callback}(${data})`;\n    this.response.set('Content-Type', 'application/js');\n  } else {\n    this.response.set('Content-Type', 'application/json');\n  }\n\n  if (data) {\n    this.body = data;\n  }\n}\n\nfunction handler(p) {\n  try {\n    output.call(this, require(p)); // 不缓存模块\n\n    if (require.cache[`${p}.json`]) {\n      delete require.cache[`${p}.json`];\n    } else {\n      delete require.cache[`${p}.js`];\n    }\n  } catch (ex) {\n    console.error(ex.message);\n    output.call(this, {\n      status: 1,\n      message: ex.message\n    });\n  }\n}\n\nexports.start = function (config) {\n  config = config || {};\n  const tasks = config.tasks;\n  const root = config.mockRoot || process.cwd();\n  const mapping = config.mapping || [];\n  const port = config.port || 3000; // 重构路径解析\n\n  if (config.tasks) {\n    for (const task in tasks) {\n      const getTarget = tasks[task];\n\n      tasks[task] = function (ctx, next) {\n        let p = getTarget(ctx, next);\n\n        if (typeof p === 'string') {\n          p = path.resolve(root, p);\n          return handler.call(ctx, p);\n        } else {\n          output.call(ctx, p);\n        }\n      };\n    }\n  } // 路由规则解析\n\n\n  for (const task in mapping) {\n    if (tasks[task]) {\n      const proc = tasks[task];\n      const list = mapping[task];\n      list.forEach(url => {\n        router.get(url, proc);\n        router.post(url, proc);\n      });\n    }\n  }\n\n  app.use(router.routes()).use(router.allowedMethods());\n  app.listen(port);\n};","map":{"version":3,"names":["path","require","Koa","Router","app","router","output","r","data","call","request","response","JSON","stringify","callback","query","set","body","handler","p","cache","ex","console","error","message","status","exports","start","config","tasks","root","mockRoot","process","cwd","mapping","port","task","getTarget","ctx","next","resolve","proc","list","forEach","url","get","post","use","routes","allowedMethods","listen"],"sources":["/Users/zen/Desktop/Backstage-exercise/node_modules/echart/index.js"],"sourcesContent":["var path = require('path')\nvar Koa = require('koa')\nvar Router = require('koa-router')\nvar app = new Koa()\nvar router = new Router()\n\nfunction output (r) {\n    var data = (typeof r === 'function')\n        ? r.call(this, this.request, this.response) : r\n    data = data && JSON.stringify(data, '', 4)\n    var callback = this.request.query.callback\n    if (data && callback) {\n        data = `${callback}(${data})`\n        this.response.set('Content-Type', 'application/js')\n    }\n    else {\n        this.response.set('Content-Type', 'application/json')\n    }\n\n    if (data) {\n        this.body = data\n    }\n}\n\nfunction handler (p) {\n    try {\n        output.call(this, require(p))\n        // 不缓存模块\n        if (require.cache[`${p}.json`]) {\n            delete require.cache[`${p}.json`]\n        }\n        else {\n            delete require.cache[`${p}.js`]\n        }\n    }\n    catch (ex) {\n        console.error(ex.message)\n        output.call(this, {status: 1, message: ex.message})\n    }\n}\n\nexports.start = function (config) {\n    config = config || {}\n    const tasks = config.tasks\n    const root = config.mockRoot || process.cwd()\n    const mapping = config.mapping || []\n    const port = config.port || 3000\n\n    // 重构路径解析\n    if (config.tasks) {\n        for (const task in tasks) {\n            const getTarget = tasks[task]\n            tasks[task] = function (ctx, next) {\n                let p = getTarget(ctx, next)\n                if (typeof p === 'string') {\n                    p = path.resolve(root, p)\n                    return handler.call(ctx, p)\n                }\n                else {\n                    output.call(ctx, p)\n                }\n            }\n        }\n    }\n\n    // 路由规则解析\n    for (const task in mapping) {\n        if (tasks[task]) {\n            const proc = tasks[task]\n            const list = mapping[task]\n            list.forEach(url => {\n                router.get(url, proc)\n                router.post(url, proc)\n            })\n        }\n    }\n\n    app\n      .use(router.routes())\n      .use(router.allowedMethods())\n\n    app.listen(port)\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}