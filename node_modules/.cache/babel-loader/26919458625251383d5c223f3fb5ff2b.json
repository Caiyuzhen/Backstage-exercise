{"ast":null,"code":"import _regeneratorRuntime from\"/Users/Youzen/Desktop/Backstage-exercise/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/Youzen/Desktop/Backstage-exercise/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _createClass from\"/Users/Youzen/Desktop/Backstage-exercise/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"/Users/Youzen/Desktop/Backstage-exercise/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";//login module\nimport{makeAutoObservable}from'mobx';import{http}from'@/utils';var LoginStore=/*#__PURE__*/_createClass(function LoginStore(){var _this=this;_classCallCheck(this,LoginStore);this.token='';this.getToken=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref){var mobile,code,res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:mobile=_ref.mobile,code=_ref.code;_context.next=3;return http.post('http://geek.itheima.net/v1_0/authorizations',{mobile:mobile,code:code});case 3:res=_context.sent;//拿到 token 并存入 token 数据\n_this.token=res.data;case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}();//响应式的处理\nmakeAutoObservable(this);}//👇定义获得 token 的方法, 🔥🔥🔥然后在业务组件里边调用这个类的这个方法进行传参数\n);export default LoginStore;","map":{"version":3,"names":["makeAutoObservable","http","LoginStore","token","getToken","mobile","code","post","res","data"],"sources":["/Users/Youzen/Desktop/Backstage-exercise/src/store/login.Store.js"],"sourcesContent":["//login module\nimport { makeAutoObservable } from 'mobx';\nimport { http } from '@/utils'\n\n\n\nclass LoginStore {\n\ttoken = ''\n\n\tconstructor(){\n\t\t//响应式的处理\n\t\tmakeAutoObservable(this)\n\t}\n\n\t//👇定义获得 token 的方法, 🔥🔥🔥然后在业务组件里边调用这个类的这个方法进行传参数\n\tgetToken = async ({mobile,code}) => {//接收输入框传入的 {usename,password} 数据，解构赋值, {mobile,code} 是后端要求的命名码\n\n\t//用异步函数把参数发送出去，调用登录接口 (token 鉴权接口)\n\t\tconst res = await http.post('http://geek.itheima.net/v1_0/authorizations',{\n\t\t\tmobile,code\n\t\t})\n\t\t//拿到 token 并存入 token 数据\n\t\tthis.token = res.data\n\t}\n}\n\nexport default LoginStore"],"mappings":"sgBAAA;AACA,OAASA,kBAAT,KAAmC,MAAnC,CACA,OAASC,IAAT,KAAqB,SAArB,C,GAIMC,W,2BAGL,qBAAa,sDAFbC,KAEa,CAFL,EAEK,MAMbC,QANa,6FAMF,6JAAQC,MAAR,MAAQA,MAAR,CAAeC,IAAf,MAAeA,IAAf,uBAGQL,KAAI,CAACM,IAAL,CAAU,6CAAV,CAAwD,CACzEF,MAAM,CAANA,MADyE,CAClEC,IAAI,CAAJA,IADkE,CAAxD,CAHR,QAGJE,GAHI,eAMV;AACA,KAAI,CAACL,KAAL,CAAaK,GAAG,CAACC,IAAjB,CAPU,sDANE,gEACZ;AACAT,kBAAkB,CAAC,IAAD,CAAlB,CACA,CAED;EAYD,cAAeE,WAAf"},"metadata":{},"sourceType":"module"}