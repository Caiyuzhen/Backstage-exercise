{"ast":null,"code":"import axios from\"axios\";//封装 axios\n//第一步：实例化\nvar http=axios.create({baseURL:'http://geek.itheima.net/v1_0',//请求地址\ntimeout:5000//5s后超时\n});//第二步：请求拦截器\nhttp.interceptors.request.use(function(config){return config;},function(error){return Promise.reject(error);});//第三步：响应拦截器\nhttp.interceptors.response.use(function(response){//成功响应 200~300 的状态码时，执行下面的回调函数\nreturn response;},function(error){//当超出 200~300 的状态码时，执行下面的回调函数\nreturn Promise.reject(error);});export{http};","map":{"version":3,"names":["axios","http","create","baseURL","timeout","interceptors","request","use","config","error","Promise","reject","response"],"sources":["/Users/Youzen/Desktop/Backstage-exercise/src/utils/http.js"],"sourcesContent":["import axios from \"axios\";\n\n\n//封装 axios\n\n//第一步：实例化\nconst http = axios.create(\n\t{\n\t\tbaseURL: 'http://geek.itheima.net/v1_0', //请求地址\n\t\ttimeout:5000 //5s后超时\n\t}\n)\n\n//第二步：请求拦截器\nhttp.interceptors.request.use((config)=>{\n\treturn config\n},(error)=> {\n\treturn Promise.reject(error)\n})\n\n\n//第三步：响应拦截器\nhttp.interceptors.response.use((response)=>{\n\t//成功响应 200~300 的状态码时，执行下面的回调函数\n\treturn response\n},(error)=>{//当超出 200~300 的状态码时，执行下面的回调函数\n\treturn Promise.reject(error)\n})\n\n\nexport { http }"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CAGA;AAEA;AACA,GAAMC,KAAI,CAAGD,KAAK,CAACE,MAAN,CACZ,CACCC,OAAO,CAAE,8BADV,CAC0C;AACzCC,OAAO,CAAC,IAAK;AAFd,CADY,CAAb,CAOA;AACAH,IAAI,CAACI,YAAL,CAAkBC,OAAlB,CAA0BC,GAA1B,CAA8B,SAACC,MAAD,CAAU,CACvC,MAAOA,OAAP,CACA,CAFD,CAEE,SAACC,KAAD,CAAU,CACX,MAAOC,QAAO,CAACC,MAAR,CAAeF,KAAf,CAAP,CACA,CAJD,EAOA;AACAR,IAAI,CAACI,YAAL,CAAkBO,QAAlB,CAA2BL,GAA3B,CAA+B,SAACK,QAAD,CAAY,CAC1C;AACA,MAAOA,SAAP,CACA,CAHD,CAGE,SAACH,KAAD,CAAS,CAAC;AACX,MAAOC,QAAO,CAACC,MAAR,CAAeF,KAAf,CAAP,CACA,CALD,EAQA,OAASR,IAAT"},"metadata":{},"sourceType":"module"}