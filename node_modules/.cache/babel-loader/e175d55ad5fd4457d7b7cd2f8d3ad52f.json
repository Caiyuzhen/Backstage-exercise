{"ast":null,"code":"/**\n * RESTful resource routing middleware for koa.\n *\n * @author Alex Mingoia <talk@alexmingoia.com>\n * @link https://github.com/alexmingoia/koa-router\n */\nvar debug = require('debug')('koa-router');\n\nvar compose = require('koa-compose');\n\nvar HttpError = require('http-errors');\n\nvar methods = require('methods');\n\nvar Layer = require('./layer');\n/**\n * @module koa-router\n */\n\n\nmodule.exports = Router;\n/**\n * Create a new router.\n *\n * @example\n *\n * Basic usage:\n *\n * ```javascript\n * var Koa = require('koa');\n * var Router = require('koa-router');\n *\n * var app = new Koa();\n * var router = new Router();\n *\n * router.get('/', (ctx, next) => {\n *   // ctx.router available\n * });\n *\n * app\n *   .use(router.routes())\n *   .use(router.allowedMethods());\n * ```\n *\n * @alias module:koa-router\n * @param {Object=} opts\n * @param {String=} opts.prefix prefix router paths\n * @constructor\n */\n\nfunction Router(opts) {\n  if (!(this instanceof Router)) {\n    return new Router(opts);\n  }\n\n  this.opts = opts || {};\n  this.methods = this.opts.methods || ['HEAD', 'OPTIONS', 'GET', 'PUT', 'PATCH', 'POST', 'DELETE'];\n  this.params = {};\n  this.stack = [];\n}\n\n;\n/**\n * Create `router.verb()` methods, where *verb* is one of the HTTP verbs such\n * as `router.get()` or `router.post()`.\n *\n * Match URL patterns to callback functions or controller actions using `router.verb()`,\n * where **verb** is one of the HTTP verbs such as `router.get()` or `router.post()`.\n *\n * Additionaly, `router.all()` can be used to match against all methods.\n *\n * ```javascript\n * router\n *   .get('/', (ctx, next) => {\n *     ctx.body = 'Hello World!';\n *   })\n *   .post('/users', (ctx, next) => {\n *     // ...\n *   })\n *   .put('/users/:id', (ctx, next) => {\n *     // ...\n *   })\n *   .del('/users/:id', (ctx, next) => {\n *     // ...\n *   })\n *   .all('/users/:id', (ctx, next) => {\n *     // ...\n *   });\n * ```\n *\n * When a route is matched, its path is available at `ctx._matchedRoute` and if named,\n * the name is available at `ctx._matchedRouteName`\n *\n * Route paths will be translated to regular expressions using\n * [path-to-regexp](https://github.com/pillarjs/path-to-regexp).\n *\n * Query strings will not be considered when matching requests.\n *\n * #### Named routes\n *\n * Routes can optionally have names. This allows generation of URLs and easy\n * renaming of URLs during development.\n *\n * ```javascript\n * router.get('user', '/users/:id', (ctx, next) => {\n *  // ...\n * });\n *\n * router.url('user', 3);\n * // => \"/users/3\"\n * ```\n *\n * #### Multiple middleware\n *\n * Multiple middleware may be given:\n *\n * ```javascript\n * router.get(\n *   '/users/:id',\n *   (ctx, next) => {\n *     return User.findOne(ctx.params.id).then(function(user) {\n *       ctx.user = user;\n *       next();\n *     });\n *   },\n *   ctx => {\n *     console.log(ctx.user);\n *     // => { id: 17, name: \"Alex\" }\n *   }\n * );\n * ```\n *\n * ### Nested routers\n *\n * Nesting routers is supported:\n *\n * ```javascript\n * var forums = new Router();\n * var posts = new Router();\n *\n * posts.get('/', (ctx, next) => {...});\n * posts.get('/:pid', (ctx, next) => {...});\n * forums.use('/forums/:fid/posts', posts.routes(), posts.allowedMethods());\n *\n * // responds to \"/forums/123/posts\" and \"/forums/123/posts/123\"\n * app.use(forums.routes());\n * ```\n *\n * #### Router prefixes\n *\n * Route paths can be prefixed at the router level:\n *\n * ```javascript\n * var router = new Router({\n *   prefix: '/users'\n * });\n *\n * router.get('/', ...); // responds to \"/users\"\n * router.get('/:id', ...); // responds to \"/users/:id\"\n * ```\n *\n * #### URL parameters\n *\n * Named route parameters are captured and added to `ctx.params`.\n *\n * ```javascript\n * router.get('/:category/:title', (ctx, next) => {\n *   console.log(ctx.params);\n *   // => { category: 'programming', title: 'how-to-node' }\n * });\n * ```\n *\n * The [path-to-regexp](https://github.com/pillarjs/path-to-regexp) module is\n * used to convert paths to regular expressions.\n *\n * @name get|put|post|patch|delete|del\n * @memberof module:koa-router.prototype\n * @param {String} path\n * @param {Function=} middleware route middleware(s)\n * @param {Function} callback route callback\n * @returns {Router}\n */\n\nmethods.forEach(function (method) {\n  Router.prototype[method] = function (name, path, middleware) {\n    var middleware;\n\n    if (typeof path === 'string' || path instanceof RegExp) {\n      middleware = Array.prototype.slice.call(arguments, 2);\n    } else {\n      middleware = Array.prototype.slice.call(arguments, 1);\n      path = name;\n      name = null;\n    }\n\n    this.register(path, [method], middleware, {\n      name: name\n    });\n    return this;\n  };\n}); // Alias for `router.delete()` because delete is a reserved word\n\nRouter.prototype.del = Router.prototype['delete'];\n/**\n * Use given middleware.\n *\n * Middleware run in the order they are defined by `.use()`. They are invoked\n * sequentially, requests start at the first middleware and work their way\n * \"down\" the middleware stack.\n *\n * @example\n *\n * ```javascript\n * // session middleware will run before authorize\n * router\n *   .use(session())\n *   .use(authorize());\n *\n * // use middleware only with given path\n * router.use('/users', userAuth());\n *\n * // or with an array of paths\n * router.use(['/users', '/admin'], userAuth());\n *\n * app.use(router.routes());\n * ```\n *\n * @param {String=} path\n * @param {Function} middleware\n * @param {Function=} ...\n * @returns {Router}\n */\n\nRouter.prototype.use = function () {\n  var router = this;\n  var middleware = Array.prototype.slice.call(arguments);\n  var path; // support array of paths\n\n  if (Array.isArray(middleware[0]) && typeof middleware[0][0] === 'string') {\n    middleware[0].forEach(function (p) {\n      router.use.apply(router, [p].concat(middleware.slice(1)));\n    });\n    return this;\n  }\n\n  var hasPath = typeof middleware[0] === 'string';\n\n  if (hasPath) {\n    path = middleware.shift();\n  }\n\n  middleware.forEach(function (m) {\n    if (m.router) {\n      m.router.stack.forEach(function (nestedLayer) {\n        if (path) nestedLayer.setPrefix(path);\n        if (router.opts.prefix) nestedLayer.setPrefix(router.opts.prefix);\n        router.stack.push(nestedLayer);\n      });\n\n      if (router.params) {\n        Object.keys(router.params).forEach(function (key) {\n          m.router.param(key, router.params[key]);\n        });\n      }\n    } else {\n      router.register(path || '(.*)', [], m, {\n        end: false,\n        ignoreCaptures: !hasPath\n      });\n    }\n  });\n  return this;\n};\n/**\n * Set the path prefix for a Router instance that was already initialized.\n *\n * @example\n *\n * ```javascript\n * router.prefix('/things/:thing_id')\n * ```\n *\n * @param {String} prefix\n * @returns {Router}\n */\n\n\nRouter.prototype.prefix = function (prefix) {\n  prefix = prefix.replace(/\\/$/, '');\n  this.opts.prefix = prefix;\n  this.stack.forEach(function (route) {\n    route.setPrefix(prefix);\n  });\n  return this;\n};\n/**\n * Returns router middleware which dispatches a route matching the request.\n *\n * @returns {Function}\n */\n\n\nRouter.prototype.routes = Router.prototype.middleware = function () {\n  var router = this;\n\n  var dispatch = function dispatch(ctx, next) {\n    debug('%s %s', ctx.method, ctx.path);\n    var path = router.opts.routerPath || ctx.routerPath || ctx.path;\n    var matched = router.match(path, ctx.method);\n    var layerChain, layer, i;\n\n    if (ctx.matched) {\n      ctx.matched.push.apply(ctx.matched, matched.path);\n    } else {\n      ctx.matched = matched.path;\n    }\n\n    ctx.router = router;\n    if (!matched.route) return next();\n    var matchedLayers = matched.pathAndMethod;\n    var mostSpecificLayer = matchedLayers[matchedLayers.length - 1];\n    ctx._matchedRoute = mostSpecificLayer.path;\n\n    if (mostSpecificLayer.name) {\n      ctx._matchedRouteName = mostSpecificLayer.name;\n    }\n\n    layerChain = matchedLayers.reduce(function (memo, layer) {\n      memo.push(function (ctx, next) {\n        ctx.captures = layer.captures(path, ctx.captures);\n        ctx.params = layer.params(path, ctx.captures, ctx.params);\n        ctx.routerName = layer.name;\n        return next();\n      });\n      return memo.concat(layer.stack);\n    }, []);\n    return compose(layerChain)(ctx, next);\n  };\n\n  dispatch.router = this;\n  return dispatch;\n};\n/**\n * Returns separate middleware for responding to `OPTIONS` requests with\n * an `Allow` header containing the allowed methods, as well as responding\n * with `405 Method Not Allowed` and `501 Not Implemented` as appropriate.\n *\n * @example\n *\n * ```javascript\n * var Koa = require('koa');\n * var Router = require('koa-router');\n *\n * var app = new Koa();\n * var router = new Router();\n *\n * app.use(router.routes());\n * app.use(router.allowedMethods());\n * ```\n *\n * **Example with [Boom](https://github.com/hapijs/boom)**\n *\n * ```javascript\n * var Koa = require('koa');\n * var Router = require('koa-router');\n * var Boom = require('boom');\n *\n * var app = new Koa();\n * var router = new Router();\n *\n * app.use(router.routes());\n * app.use(router.allowedMethods({\n *   throw: true,\n *   notImplemented: () => new Boom.notImplemented(),\n *   methodNotAllowed: () => new Boom.methodNotAllowed()\n * }));\n * ```\n *\n * @param {Object=} options\n * @param {Boolean=} options.throw throw error instead of setting status and header\n * @param {Function=} options.notImplemented throw the returned value in place of the default NotImplemented error\n * @param {Function=} options.methodNotAllowed throw the returned value in place of the default MethodNotAllowed error\n * @returns {Function}\n */\n\n\nRouter.prototype.allowedMethods = function (options) {\n  options = options || {};\n  var implemented = this.methods;\n  return function allowedMethods(ctx, next) {\n    return next().then(function () {\n      var allowed = {};\n\n      if (!ctx.status || ctx.status === 404) {\n        ctx.matched.forEach(function (route) {\n          route.methods.forEach(function (method) {\n            allowed[method] = method;\n          });\n        });\n        var allowedArr = Object.keys(allowed);\n\n        if (!~implemented.indexOf(ctx.method)) {\n          if (options.throw) {\n            var notImplementedThrowable;\n\n            if (typeof options.notImplemented === 'function') {\n              notImplementedThrowable = options.notImplemented(); // set whatever the user returns from their function\n            } else {\n              notImplementedThrowable = new HttpError.NotImplemented();\n            }\n\n            throw notImplementedThrowable;\n          } else {\n            ctx.status = 501;\n            ctx.set('Allow', allowedArr.join(', '));\n          }\n        } else if (allowedArr.length) {\n          if (ctx.method === 'OPTIONS') {\n            ctx.status = 200;\n            ctx.body = '';\n            ctx.set('Allow', allowedArr.join(', '));\n          } else if (!allowed[ctx.method]) {\n            if (options.throw) {\n              var notAllowedThrowable;\n\n              if (typeof options.methodNotAllowed === 'function') {\n                notAllowedThrowable = options.methodNotAllowed(); // set whatever the user returns from their function\n              } else {\n                notAllowedThrowable = new HttpError.MethodNotAllowed();\n              }\n\n              throw notAllowedThrowable;\n            } else {\n              ctx.status = 405;\n              ctx.set('Allow', allowedArr.join(', '));\n            }\n          }\n        }\n      }\n    });\n  };\n};\n/**\n * Register route with all methods.\n *\n * @param {String} name Optional.\n * @param {String} path\n * @param {Function=} middleware You may also pass multiple middleware.\n * @param {Function} callback\n * @returns {Router}\n * @private\n */\n\n\nRouter.prototype.all = function (name, path, middleware) {\n  var middleware;\n\n  if (typeof path === 'string') {\n    middleware = Array.prototype.slice.call(arguments, 2);\n  } else {\n    middleware = Array.prototype.slice.call(arguments, 1);\n    path = name;\n    name = null;\n  }\n\n  this.register(path, methods, middleware, {\n    name: name\n  });\n  return this;\n};\n/**\n * Redirect `source` to `destination` URL with optional 30x status `code`.\n *\n * Both `source` and `destination` can be route names.\n *\n * ```javascript\n * router.redirect('/login', 'sign-in');\n * ```\n *\n * This is equivalent to:\n *\n * ```javascript\n * router.all('/login', ctx => {\n *   ctx.redirect('/sign-in');\n *   ctx.status = 301;\n * });\n * ```\n *\n * @param {String} source URL or route name.\n * @param {String} destination URL or route name.\n * @param {Number=} code HTTP status code (default: 301).\n * @returns {Router}\n */\n\n\nRouter.prototype.redirect = function (source, destination, code) {\n  // lookup source route by name\n  if (source[0] !== '/') {\n    source = this.url(source);\n  } // lookup destination route by name\n\n\n  if (destination[0] !== '/') {\n    destination = this.url(destination);\n  }\n\n  return this.all(source, ctx => {\n    ctx.redirect(destination);\n    ctx.status = code || 301;\n  });\n};\n/**\n * Create and register a route.\n *\n * @param {String} path Path string.\n * @param {Array.<String>} methods Array of HTTP verbs.\n * @param {Function} middleware Multiple middleware also accepted.\n * @returns {Layer}\n * @private\n */\n\n\nRouter.prototype.register = function (path, methods, middleware, opts) {\n  opts = opts || {};\n  var router = this;\n  var stack = this.stack; // support array of paths\n\n  if (Array.isArray(path)) {\n    path.forEach(function (p) {\n      router.register.call(router, p, methods, middleware, opts);\n    });\n    return this;\n  } // create route\n\n\n  var route = new Layer(path, methods, middleware, {\n    end: opts.end === false ? opts.end : true,\n    name: opts.name,\n    sensitive: opts.sensitive || this.opts.sensitive || false,\n    strict: opts.strict || this.opts.strict || false,\n    prefix: opts.prefix || this.opts.prefix || \"\",\n    ignoreCaptures: opts.ignoreCaptures\n  });\n\n  if (this.opts.prefix) {\n    route.setPrefix(this.opts.prefix);\n  } // add parameter middleware\n\n\n  Object.keys(this.params).forEach(function (param) {\n    route.param(param, this.params[param]);\n  }, this);\n  stack.push(route);\n  return route;\n};\n/**\n * Lookup route with given `name`.\n *\n * @param {String} name\n * @returns {Layer|false}\n */\n\n\nRouter.prototype.route = function (name) {\n  var routes = this.stack;\n\n  for (var len = routes.length, i = 0; i < len; i++) {\n    if (routes[i].name && routes[i].name === name) {\n      return routes[i];\n    }\n  }\n\n  return false;\n};\n/**\n * Generate URL for route. Takes a route name and map of named `params`.\n *\n * @example\n *\n * ```javascript\n * router.get('user', '/users/:id', (ctx, next) => {\n *   // ...\n * });\n *\n * router.url('user', 3);\n * // => \"/users/3\"\n *\n * router.url('user', { id: 3 });\n * // => \"/users/3\"\n *\n * router.use((ctx, next) => {\n *   // redirect to named route\n *   ctx.redirect(ctx.router.url('sign-in'));\n * })\n *\n * router.url('user', { id: 3 }, { query: { limit: 1 } });\n * // => \"/users/3?limit=1\"\n *\n * router.url('user', { id: 3 }, { query: \"limit=1\" });\n * // => \"/users/3?limit=1\"\n * ```\n *\n * @param {String} name route name\n * @param {Object} params url parameters\n * @param {Object} [options] options parameter\n * @param {Object|String} [options.query] query options\n * @returns {String|Error}\n */\n\n\nRouter.prototype.url = function (name, params) {\n  var route = this.route(name);\n\n  if (route) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return route.url.apply(route, args);\n  }\n\n  return new Error(\"No route found for name: \" + name);\n};\n/**\n * Match given `path` and return corresponding routes.\n *\n * @param {String} path\n * @param {String} method\n * @returns {Object.<path, pathAndMethod>} returns layers that matched path and\n * path and method.\n * @private\n */\n\n\nRouter.prototype.match = function (path, method) {\n  var layers = this.stack;\n  var layer;\n  var matched = {\n    path: [],\n    pathAndMethod: [],\n    route: false\n  };\n\n  for (var len = layers.length, i = 0; i < len; i++) {\n    layer = layers[i];\n    debug('test %s %s', layer.path, layer.regexp);\n\n    if (layer.match(path)) {\n      matched.path.push(layer);\n\n      if (layer.methods.length === 0 || ~layer.methods.indexOf(method)) {\n        matched.pathAndMethod.push(layer);\n        if (layer.methods.length) matched.route = true;\n      }\n    }\n  }\n\n  return matched;\n};\n/**\n * Run middleware for named route parameters. Useful for auto-loading or\n * validation.\n *\n * @example\n *\n * ```javascript\n * router\n *   .param('user', (id, ctx, next) => {\n *     ctx.user = users[id];\n *     if (!ctx.user) return ctx.status = 404;\n *     return next();\n *   })\n *   .get('/users/:user', ctx => {\n *     ctx.body = ctx.user;\n *   })\n *   .get('/users/:user/friends', ctx => {\n *     return ctx.user.getFriends().then(function(friends) {\n *       ctx.body = friends;\n *     });\n *   })\n *   // /users/3 => {\"id\": 3, \"name\": \"Alex\"}\n *   // /users/3/friends => [{\"id\": 4, \"name\": \"TJ\"}]\n * ```\n *\n * @param {String} param\n * @param {Function} middleware\n * @returns {Router}\n */\n\n\nRouter.prototype.param = function (param, middleware) {\n  this.params[param] = middleware;\n  this.stack.forEach(function (route) {\n    route.param(param, middleware);\n  });\n  return this;\n};\n/**\n * Generate URL from url pattern and given `params`.\n *\n * @example\n *\n * ```javascript\n * var url = Router.url('/users/:id', {id: 1});\n * // => \"/users/1\"\n * ```\n *\n * @param {String} path url pattern\n * @param {Object} params url parameters\n * @returns {String}\n */\n\n\nRouter.url = function (path, params) {\n  return Layer.prototype.url.call({\n    path: path\n  }, params);\n};","map":{"version":3,"names":["debug","require","compose","HttpError","methods","Layer","module","exports","Router","opts","params","stack","forEach","method","prototype","name","path","middleware","RegExp","Array","slice","call","arguments","register","del","use","router","isArray","p","apply","concat","hasPath","shift","m","nestedLayer","setPrefix","prefix","push","Object","keys","key","param","end","ignoreCaptures","replace","route","routes","dispatch","ctx","next","routerPath","matched","match","layerChain","layer","i","matchedLayers","pathAndMethod","mostSpecificLayer","length","_matchedRoute","_matchedRouteName","reduce","memo","captures","routerName","allowedMethods","options","implemented","then","allowed","status","allowedArr","indexOf","throw","notImplementedThrowable","notImplemented","NotImplemented","set","join","body","notAllowedThrowable","methodNotAllowed","MethodNotAllowed","all","redirect","source","destination","code","url","sensitive","strict","len","args","Error","layers","regexp"],"sources":["/Users/zen/Desktop/Backstage-exercise/node_modules/koa-router/lib/router.js"],"sourcesContent":["/**\n * RESTful resource routing middleware for koa.\n *\n * @author Alex Mingoia <talk@alexmingoia.com>\n * @link https://github.com/alexmingoia/koa-router\n */\n\nvar debug = require('debug')('koa-router');\nvar compose = require('koa-compose');\nvar HttpError = require('http-errors');\nvar methods = require('methods');\nvar Layer = require('./layer');\n\n/**\n * @module koa-router\n */\n\nmodule.exports = Router;\n\n/**\n * Create a new router.\n *\n * @example\n *\n * Basic usage:\n *\n * ```javascript\n * var Koa = require('koa');\n * var Router = require('koa-router');\n *\n * var app = new Koa();\n * var router = new Router();\n *\n * router.get('/', (ctx, next) => {\n *   // ctx.router available\n * });\n *\n * app\n *   .use(router.routes())\n *   .use(router.allowedMethods());\n * ```\n *\n * @alias module:koa-router\n * @param {Object=} opts\n * @param {String=} opts.prefix prefix router paths\n * @constructor\n */\n\nfunction Router(opts) {\n  if (!(this instanceof Router)) {\n    return new Router(opts);\n  }\n\n  this.opts = opts || {};\n  this.methods = this.opts.methods || [\n    'HEAD',\n    'OPTIONS',\n    'GET',\n    'PUT',\n    'PATCH',\n    'POST',\n    'DELETE'\n  ];\n\n  this.params = {};\n  this.stack = [];\n};\n\n/**\n * Create `router.verb()` methods, where *verb* is one of the HTTP verbs such\n * as `router.get()` or `router.post()`.\n *\n * Match URL patterns to callback functions or controller actions using `router.verb()`,\n * where **verb** is one of the HTTP verbs such as `router.get()` or `router.post()`.\n *\n * Additionaly, `router.all()` can be used to match against all methods.\n *\n * ```javascript\n * router\n *   .get('/', (ctx, next) => {\n *     ctx.body = 'Hello World!';\n *   })\n *   .post('/users', (ctx, next) => {\n *     // ...\n *   })\n *   .put('/users/:id', (ctx, next) => {\n *     // ...\n *   })\n *   .del('/users/:id', (ctx, next) => {\n *     // ...\n *   })\n *   .all('/users/:id', (ctx, next) => {\n *     // ...\n *   });\n * ```\n *\n * When a route is matched, its path is available at `ctx._matchedRoute` and if named,\n * the name is available at `ctx._matchedRouteName`\n *\n * Route paths will be translated to regular expressions using\n * [path-to-regexp](https://github.com/pillarjs/path-to-regexp).\n *\n * Query strings will not be considered when matching requests.\n *\n * #### Named routes\n *\n * Routes can optionally have names. This allows generation of URLs and easy\n * renaming of URLs during development.\n *\n * ```javascript\n * router.get('user', '/users/:id', (ctx, next) => {\n *  // ...\n * });\n *\n * router.url('user', 3);\n * // => \"/users/3\"\n * ```\n *\n * #### Multiple middleware\n *\n * Multiple middleware may be given:\n *\n * ```javascript\n * router.get(\n *   '/users/:id',\n *   (ctx, next) => {\n *     return User.findOne(ctx.params.id).then(function(user) {\n *       ctx.user = user;\n *       next();\n *     });\n *   },\n *   ctx => {\n *     console.log(ctx.user);\n *     // => { id: 17, name: \"Alex\" }\n *   }\n * );\n * ```\n *\n * ### Nested routers\n *\n * Nesting routers is supported:\n *\n * ```javascript\n * var forums = new Router();\n * var posts = new Router();\n *\n * posts.get('/', (ctx, next) => {...});\n * posts.get('/:pid', (ctx, next) => {...});\n * forums.use('/forums/:fid/posts', posts.routes(), posts.allowedMethods());\n *\n * // responds to \"/forums/123/posts\" and \"/forums/123/posts/123\"\n * app.use(forums.routes());\n * ```\n *\n * #### Router prefixes\n *\n * Route paths can be prefixed at the router level:\n *\n * ```javascript\n * var router = new Router({\n *   prefix: '/users'\n * });\n *\n * router.get('/', ...); // responds to \"/users\"\n * router.get('/:id', ...); // responds to \"/users/:id\"\n * ```\n *\n * #### URL parameters\n *\n * Named route parameters are captured and added to `ctx.params`.\n *\n * ```javascript\n * router.get('/:category/:title', (ctx, next) => {\n *   console.log(ctx.params);\n *   // => { category: 'programming', title: 'how-to-node' }\n * });\n * ```\n *\n * The [path-to-regexp](https://github.com/pillarjs/path-to-regexp) module is\n * used to convert paths to regular expressions.\n *\n * @name get|put|post|patch|delete|del\n * @memberof module:koa-router.prototype\n * @param {String} path\n * @param {Function=} middleware route middleware(s)\n * @param {Function} callback route callback\n * @returns {Router}\n */\n\nmethods.forEach(function (method) {\n  Router.prototype[method] = function (name, path, middleware) {\n    var middleware;\n\n    if (typeof path === 'string' || path instanceof RegExp) {\n      middleware = Array.prototype.slice.call(arguments, 2);\n    } else {\n      middleware = Array.prototype.slice.call(arguments, 1);\n      path = name;\n      name = null;\n    }\n\n    this.register(path, [method], middleware, {\n      name: name\n    });\n\n    return this;\n  };\n});\n\n// Alias for `router.delete()` because delete is a reserved word\nRouter.prototype.del = Router.prototype['delete'];\n\n/**\n * Use given middleware.\n *\n * Middleware run in the order they are defined by `.use()`. They are invoked\n * sequentially, requests start at the first middleware and work their way\n * \"down\" the middleware stack.\n *\n * @example\n *\n * ```javascript\n * // session middleware will run before authorize\n * router\n *   .use(session())\n *   .use(authorize());\n *\n * // use middleware only with given path\n * router.use('/users', userAuth());\n *\n * // or with an array of paths\n * router.use(['/users', '/admin'], userAuth());\n *\n * app.use(router.routes());\n * ```\n *\n * @param {String=} path\n * @param {Function} middleware\n * @param {Function=} ...\n * @returns {Router}\n */\n\nRouter.prototype.use = function () {\n  var router = this;\n  var middleware = Array.prototype.slice.call(arguments);\n  var path;\n\n  // support array of paths\n  if (Array.isArray(middleware[0]) && typeof middleware[0][0] === 'string') {\n    middleware[0].forEach(function (p) {\n      router.use.apply(router, [p].concat(middleware.slice(1)));\n    });\n\n    return this;\n  }\n\n  var hasPath = typeof middleware[0] === 'string';\n  if (hasPath) {\n    path = middleware.shift();\n  }\n\n  middleware.forEach(function (m) {\n    if (m.router) {\n      m.router.stack.forEach(function (nestedLayer) {\n        if (path) nestedLayer.setPrefix(path);\n        if (router.opts.prefix) nestedLayer.setPrefix(router.opts.prefix);\n        router.stack.push(nestedLayer);\n      });\n\n      if (router.params) {\n        Object.keys(router.params).forEach(function (key) {\n          m.router.param(key, router.params[key]);\n        });\n      }\n    } else {\n      router.register(path || '(.*)', [], m, { end: false, ignoreCaptures: !hasPath });\n    }\n  });\n\n  return this;\n};\n\n/**\n * Set the path prefix for a Router instance that was already initialized.\n *\n * @example\n *\n * ```javascript\n * router.prefix('/things/:thing_id')\n * ```\n *\n * @param {String} prefix\n * @returns {Router}\n */\n\nRouter.prototype.prefix = function (prefix) {\n  prefix = prefix.replace(/\\/$/, '');\n\n  this.opts.prefix = prefix;\n\n  this.stack.forEach(function (route) {\n    route.setPrefix(prefix);\n  });\n\n  return this;\n};\n\n/**\n * Returns router middleware which dispatches a route matching the request.\n *\n * @returns {Function}\n */\n\nRouter.prototype.routes = Router.prototype.middleware = function () {\n  var router = this;\n\n  var dispatch = function dispatch(ctx, next) {\n    debug('%s %s', ctx.method, ctx.path);\n\n    var path = router.opts.routerPath || ctx.routerPath || ctx.path;\n    var matched = router.match(path, ctx.method);\n    var layerChain, layer, i;\n\n    if (ctx.matched) {\n      ctx.matched.push.apply(ctx.matched, matched.path);\n    } else {\n      ctx.matched = matched.path;\n    }\n\n    ctx.router = router;\n\n    if (!matched.route) return next();\n\n    var matchedLayers = matched.pathAndMethod\n    var mostSpecificLayer = matchedLayers[matchedLayers.length - 1]\n    ctx._matchedRoute = mostSpecificLayer.path;\n    if (mostSpecificLayer.name) {\n      ctx._matchedRouteName = mostSpecificLayer.name;\n    }\n\n    layerChain = matchedLayers.reduce(function(memo, layer) {\n      memo.push(function(ctx, next) {\n        ctx.captures = layer.captures(path, ctx.captures);\n        ctx.params = layer.params(path, ctx.captures, ctx.params);\n        ctx.routerName = layer.name;\n        return next();\n      });\n      return memo.concat(layer.stack);\n    }, []);\n\n    return compose(layerChain)(ctx, next);\n  };\n\n  dispatch.router = this;\n\n  return dispatch;\n};\n\n/**\n * Returns separate middleware for responding to `OPTIONS` requests with\n * an `Allow` header containing the allowed methods, as well as responding\n * with `405 Method Not Allowed` and `501 Not Implemented` as appropriate.\n *\n * @example\n *\n * ```javascript\n * var Koa = require('koa');\n * var Router = require('koa-router');\n *\n * var app = new Koa();\n * var router = new Router();\n *\n * app.use(router.routes());\n * app.use(router.allowedMethods());\n * ```\n *\n * **Example with [Boom](https://github.com/hapijs/boom)**\n *\n * ```javascript\n * var Koa = require('koa');\n * var Router = require('koa-router');\n * var Boom = require('boom');\n *\n * var app = new Koa();\n * var router = new Router();\n *\n * app.use(router.routes());\n * app.use(router.allowedMethods({\n *   throw: true,\n *   notImplemented: () => new Boom.notImplemented(),\n *   methodNotAllowed: () => new Boom.methodNotAllowed()\n * }));\n * ```\n *\n * @param {Object=} options\n * @param {Boolean=} options.throw throw error instead of setting status and header\n * @param {Function=} options.notImplemented throw the returned value in place of the default NotImplemented error\n * @param {Function=} options.methodNotAllowed throw the returned value in place of the default MethodNotAllowed error\n * @returns {Function}\n */\n\nRouter.prototype.allowedMethods = function (options) {\n  options = options || {};\n  var implemented = this.methods;\n\n  return function allowedMethods(ctx, next) {\n    return next().then(function() {\n      var allowed = {};\n\n      if (!ctx.status || ctx.status === 404) {\n        ctx.matched.forEach(function (route) {\n          route.methods.forEach(function (method) {\n            allowed[method] = method;\n          });\n        });\n\n        var allowedArr = Object.keys(allowed);\n\n        if (!~implemented.indexOf(ctx.method)) {\n          if (options.throw) {\n            var notImplementedThrowable;\n            if (typeof options.notImplemented === 'function') {\n              notImplementedThrowable = options.notImplemented(); // set whatever the user returns from their function\n            } else {\n              notImplementedThrowable = new HttpError.NotImplemented();\n            }\n            throw notImplementedThrowable;\n          } else {\n            ctx.status = 501;\n            ctx.set('Allow', allowedArr.join(', '));\n          }\n        } else if (allowedArr.length) {\n          if (ctx.method === 'OPTIONS') {\n            ctx.status = 200;\n            ctx.body = '';\n            ctx.set('Allow', allowedArr.join(', '));\n          } else if (!allowed[ctx.method]) {\n            if (options.throw) {\n              var notAllowedThrowable;\n              if (typeof options.methodNotAllowed === 'function') {\n                notAllowedThrowable = options.methodNotAllowed(); // set whatever the user returns from their function\n              } else {\n                notAllowedThrowable = new HttpError.MethodNotAllowed();\n              }\n              throw notAllowedThrowable;\n            } else {\n              ctx.status = 405;\n              ctx.set('Allow', allowedArr.join(', '));\n            }\n          }\n        }\n      }\n    });\n  };\n};\n\n/**\n * Register route with all methods.\n *\n * @param {String} name Optional.\n * @param {String} path\n * @param {Function=} middleware You may also pass multiple middleware.\n * @param {Function} callback\n * @returns {Router}\n * @private\n */\n\nRouter.prototype.all = function (name, path, middleware) {\n  var middleware;\n\n  if (typeof path === 'string') {\n    middleware = Array.prototype.slice.call(arguments, 2);\n  } else {\n    middleware = Array.prototype.slice.call(arguments, 1);\n    path = name;\n    name = null;\n  }\n\n  this.register(path, methods, middleware, {\n    name: name\n  });\n\n  return this;\n};\n\n/**\n * Redirect `source` to `destination` URL with optional 30x status `code`.\n *\n * Both `source` and `destination` can be route names.\n *\n * ```javascript\n * router.redirect('/login', 'sign-in');\n * ```\n *\n * This is equivalent to:\n *\n * ```javascript\n * router.all('/login', ctx => {\n *   ctx.redirect('/sign-in');\n *   ctx.status = 301;\n * });\n * ```\n *\n * @param {String} source URL or route name.\n * @param {String} destination URL or route name.\n * @param {Number=} code HTTP status code (default: 301).\n * @returns {Router}\n */\n\nRouter.prototype.redirect = function (source, destination, code) {\n  // lookup source route by name\n  if (source[0] !== '/') {\n    source = this.url(source);\n  }\n\n  // lookup destination route by name\n  if (destination[0] !== '/') {\n    destination = this.url(destination);\n  }\n\n  return this.all(source, ctx => {\n    ctx.redirect(destination);\n    ctx.status = code || 301;\n  });\n};\n\n/**\n * Create and register a route.\n *\n * @param {String} path Path string.\n * @param {Array.<String>} methods Array of HTTP verbs.\n * @param {Function} middleware Multiple middleware also accepted.\n * @returns {Layer}\n * @private\n */\n\nRouter.prototype.register = function (path, methods, middleware, opts) {\n  opts = opts || {};\n\n  var router = this;\n  var stack = this.stack;\n\n  // support array of paths\n  if (Array.isArray(path)) {\n    path.forEach(function (p) {\n      router.register.call(router, p, methods, middleware, opts);\n    });\n\n    return this;\n  }\n\n  // create route\n  var route = new Layer(path, methods, middleware, {\n    end: opts.end === false ? opts.end : true,\n    name: opts.name,\n    sensitive: opts.sensitive || this.opts.sensitive || false,\n    strict: opts.strict || this.opts.strict || false,\n    prefix: opts.prefix || this.opts.prefix || \"\",\n    ignoreCaptures: opts.ignoreCaptures\n  });\n\n  if (this.opts.prefix) {\n    route.setPrefix(this.opts.prefix);\n  }\n\n  // add parameter middleware\n  Object.keys(this.params).forEach(function (param) {\n    route.param(param, this.params[param]);\n  }, this);\n\n  stack.push(route);\n\n  return route;\n};\n\n/**\n * Lookup route with given `name`.\n *\n * @param {String} name\n * @returns {Layer|false}\n */\n\nRouter.prototype.route = function (name) {\n  var routes = this.stack;\n\n  for (var len = routes.length, i=0; i<len; i++) {\n    if (routes[i].name && routes[i].name === name) {\n      return routes[i];\n    }\n  }\n\n  return false;\n};\n\n/**\n * Generate URL for route. Takes a route name and map of named `params`.\n *\n * @example\n *\n * ```javascript\n * router.get('user', '/users/:id', (ctx, next) => {\n *   // ...\n * });\n *\n * router.url('user', 3);\n * // => \"/users/3\"\n *\n * router.url('user', { id: 3 });\n * // => \"/users/3\"\n *\n * router.use((ctx, next) => {\n *   // redirect to named route\n *   ctx.redirect(ctx.router.url('sign-in'));\n * })\n *\n * router.url('user', { id: 3 }, { query: { limit: 1 } });\n * // => \"/users/3?limit=1\"\n *\n * router.url('user', { id: 3 }, { query: \"limit=1\" });\n * // => \"/users/3?limit=1\"\n * ```\n *\n * @param {String} name route name\n * @param {Object} params url parameters\n * @param {Object} [options] options parameter\n * @param {Object|String} [options.query] query options\n * @returns {String|Error}\n */\n\nRouter.prototype.url = function (name, params) {\n  var route = this.route(name);\n\n  if (route) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return route.url.apply(route, args);\n  }\n\n  return new Error(\"No route found for name: \" + name);\n};\n\n/**\n * Match given `path` and return corresponding routes.\n *\n * @param {String} path\n * @param {String} method\n * @returns {Object.<path, pathAndMethod>} returns layers that matched path and\n * path and method.\n * @private\n */\n\nRouter.prototype.match = function (path, method) {\n  var layers = this.stack;\n  var layer;\n  var matched = {\n    path: [],\n    pathAndMethod: [],\n    route: false\n  };\n\n  for (var len = layers.length, i = 0; i < len; i++) {\n    layer = layers[i];\n\n    debug('test %s %s', layer.path, layer.regexp);\n\n    if (layer.match(path)) {\n      matched.path.push(layer);\n\n      if (layer.methods.length === 0 || ~layer.methods.indexOf(method)) {\n        matched.pathAndMethod.push(layer);\n        if (layer.methods.length) matched.route = true;\n      }\n    }\n  }\n\n  return matched;\n};\n\n/**\n * Run middleware for named route parameters. Useful for auto-loading or\n * validation.\n *\n * @example\n *\n * ```javascript\n * router\n *   .param('user', (id, ctx, next) => {\n *     ctx.user = users[id];\n *     if (!ctx.user) return ctx.status = 404;\n *     return next();\n *   })\n *   .get('/users/:user', ctx => {\n *     ctx.body = ctx.user;\n *   })\n *   .get('/users/:user/friends', ctx => {\n *     return ctx.user.getFriends().then(function(friends) {\n *       ctx.body = friends;\n *     });\n *   })\n *   // /users/3 => {\"id\": 3, \"name\": \"Alex\"}\n *   // /users/3/friends => [{\"id\": 4, \"name\": \"TJ\"}]\n * ```\n *\n * @param {String} param\n * @param {Function} middleware\n * @returns {Router}\n */\n\nRouter.prototype.param = function (param, middleware) {\n  this.params[param] = middleware;\n  this.stack.forEach(function (route) {\n    route.param(param, middleware);\n  });\n  return this;\n};\n\n/**\n * Generate URL from url pattern and given `params`.\n *\n * @example\n *\n * ```javascript\n * var url = Router.url('/users/:id', {id: 1});\n * // => \"/users/1\"\n * ```\n *\n * @param {String} path url pattern\n * @param {Object} params url parameters\n * @returns {String}\n */\nRouter.url = function (path, params) {\n    return Layer.prototype.url.call({path: path}, params);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}