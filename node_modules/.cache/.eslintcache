[{"/Users/Youzen/Desktop/Backstage-exercise/src/index.js":"1","/Users/Youzen/Desktop/Backstage-exercise/src/App.js":"2","/Users/Youzen/Desktop/Backstage-exercise/src/utils/history.js":"3","/Users/Youzen/Desktop/Backstage-exercise/src/components/AuthComponents.js":"4","/Users/Youzen/Desktop/Backstage-exercise/src/pages/Publish/index.js":"5","/Users/Youzen/Desktop/Backstage-exercise/src/pages/Home/index.js":"6","/Users/Youzen/Desktop/Backstage-exercise/src/pages/Layout/index.js":"7","/Users/Youzen/Desktop/Backstage-exercise/src/pages/Article/index.js":"8","/Users/Youzen/Desktop/Backstage-exercise/src/pages/Login/index.js":"9","/Users/Youzen/Desktop/Backstage-exercise/src/utils/index.js":"10","/Users/Youzen/Desktop/Backstage-exercise/src/components/EchartBar/index.js":"11","/Users/Youzen/Desktop/Backstage-exercise/src/store/index.js":"12","/Users/Youzen/Desktop/Backstage-exercise/src/utils/token.js":"13","/Users/Youzen/Desktop/Backstage-exercise/src/utils/http.js":"14","/Users/Youzen/Desktop/Backstage-exercise/src/store/login.Store.js":"15","/Users/Youzen/Desktop/Backstage-exercise/src/store/userInfoStore.js":"16","/Users/Youzen/Desktop/Backstage-exercise/src/store/channel.Store.js":"17"},{"size":285,"mtime":1656343189134,"results":"18","hashOfConfig":"19"},{"size":1787,"mtime":1656343189119,"results":"20","hashOfConfig":"19"},{"size":256,"mtime":1656343189169,"results":"21","hashOfConfig":"19"},{"size":1211,"mtime":1656343189126,"results":"22","hashOfConfig":"19"},{"size":4885,"mtime":1656610751396,"results":"23","hashOfConfig":"19"},{"size":1079,"mtime":1656343189136,"results":"24","hashOfConfig":"19"},{"size":3674,"mtime":1656518717323,"results":"25","hashOfConfig":"19"},{"size":12085,"mtime":1656518990324,"results":"26","hashOfConfig":"19"},{"size":3197,"mtime":1656343189160,"results":"27","hashOfConfig":"19"},{"size":448,"mtime":1656343189171,"results":"28","hashOfConfig":"19"},{"size":1248,"mtime":1656343189127,"results":"29","hashOfConfig":"19"},{"size":887,"mtime":1656518300683,"results":"30","hashOfConfig":"19"},{"size":411,"mtime":1656343189171,"results":"31","hashOfConfig":"19"},{"size":1278,"mtime":1656343189169,"results":"32","hashOfConfig":"19"},{"size":1329,"mtime":1656343189169,"results":"33","hashOfConfig":"19"},{"size":731,"mtime":1656343189169,"results":"34","hashOfConfig":"19"},{"size":524,"mtime":1656519000734,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1jpojjk",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/Users/Youzen/Desktop/Backstage-exercise/src/index.js",[],[],[],"/Users/Youzen/Desktop/Backstage-exercise/src/App.js",["91","92"],[],"import { BrowserRouter, Routes, Route,unstable_HistoryRouter as HistoryRouter } from 'react-router-dom' // XXX as XXX 是重命名\nimport { history } from './utils/history'\nimport Layout from './pages/Layout'\nimport { Button } from 'antd'\nimport Login from '@/pages/Login'  //别名路径的方式\n// import Login from './pages/Login'  //传统的导入方式\nimport { AuthComponents } from '@/components/AuthComponents'\nimport './App.css'\nimport Publish from './pages/Publish'\nimport Article from './pages/Article'\nimport Home from './pages/Home'\n\n\n\n\n//配置路由——————————————————————————————————————————————————————\n\nfunction App (){\n\treturn (\n\t\t//路由配置（包裹）,<BrowserRouter>为不带历史记录的包裹方式, <HistoryRouter> 为带历史记录的包裹方式\n\t\t// <BrowserRouter>\n\t\t<HistoryRouter history={history}>\n\t\t\t<div className=\"App\">\n\t\t\t\t{/* 一级路由出口 */}\n\t\t\t\t<Routes>\n\t\t\t\t\t{/* 🔥一级路由:创建路由 path 跟组件的对应关系, 注意，🔥🔥这里 Layout 不能写死！要包裹 <AuthComponents> 鉴权看是否登录了！！ */}\n\t\t\t\t\t<Route path='/'   element={ <AuthComponents> <Layout /> </AuthComponents> }>  \n\t\t\t\t\t\t{/* 🔥二级路由:页面内的路由跳转,index 为默认页面，⚡️⚡️二级路由记得配置路由出口！！！ */}\n\t\t\t\t\t\t<Route index            element={<Home/>}></Route>\n\t\t\t\t\t\t<Route path='article'   element={<Article/>}></Route>\n\t\t\t\t\t\t<Route path='publish'   element={<Publish/>}></Route>\n\t\t\t\t\t</Route>\n\t\t\t\t\t{/*  🔥一级路由 */}\n\t\t\t\t\t<Route path='/login'  element={ <Login /> }>  </Route>\n\t\t\t\t</Routes>\n\t\t\t</div>\n\t\t</HistoryRouter>\n\t\t// </BrowserRouter>\n\t)\n}\n\nexport default App\n","/Users/Youzen/Desktop/Backstage-exercise/src/utils/history.js",[],[],"/Users/Youzen/Desktop/Backstage-exercise/src/components/AuthComponents.js",[],[],"/Users/Youzen/Desktop/Backstage-exercise/src/pages/Publish/index.js",["93","94"],[],"/Users/Youzen/Desktop/Backstage-exercise/src/pages/Home/index.js",[],[],"/Users/Youzen/Desktop/Backstage-exercise/src/pages/Layout/index.js",[],[],"/Users/Youzen/Desktop/Backstage-exercise/src/pages/Article/index.js",["95","96","97"],[],"import { Link, useNavigate } from 'react-router-dom'\nimport { Card, Breadcrumb, Form, Button, Radio, DatePicker, Select, Table, Tag, Space, Popconfirm } from 'antd'\nimport { EditOutlined, DeleteOutlined, LogoutOutlined } from '@ant-design/icons'\nimport 'moment/locale/zh-cn'//配置成中文\nimport locale from 'antd/es/date-picker/locale/zh_CN'//配置成当地的语言-中文\nimport './index.scss'\nimport img404 from '@/assets/placeholde-error.png'\nimport { useEffect, useState } from 'react'\nimport { http } from '@/utils'\nimport Item from 'antd/lib/list/Item'\nimport { useNavigation } from 'react-router-dom'\nimport { useStore } from '@/store'\nimport { observer } from 'mobx-react-lite' //中间件\n\n\nconst { Option } = Select\nconst { RangePicker } = DatePicker\n\n\n\n\nconst Article = () =>{\n\n\tconst { channelStore } = useStore() //先在 layout 发起请求，再在这里解构出 channelStore 这个方法\n\t\n\t//👇👇👇渲染下拉菜单的 channel 列表(数据存储在函数内的方式):——————————————————————————————————————————————————\n\t\t// //步骤一: 初始化时去实例化列表的临时数据(用 setChannelList 把数据放入 useState([]) 这个空数组中，并且解构赋值给 channelList) \n\t// const [channelList, setChannelList] = useState([])\n\n\t  \t\t \t // //步骤二: 声明一个异步函数调用后端接口（🌟不传参的方式, 没有依赖项, 可以写在外部，一般都是同意放到 useEffect 内的）\n\t// const loadChannelList = async() =>{\n\t// \tconst ref = await http.get('/channels')//定义一个变量来接收后端接口 url 返回的数据！\n\t// \tsetChannelList(ref.data.channels) //⚡️用 hook 来把从 api 中获取的数据放入 channelList 中\n\t// }\n\n\t    // //步骤三: 实例化调用接口的方法，获得数据(注意，useEffect 这里边不能用 async！)\n\t// useEffect(()=>{\n\t// \tloadChannelList()\n\t// },[])\n\n\n\n\t//👇👇👇渲染 table 内的文章列表:——————————————————————————————————————————————————\n\t//步骤一(1): 初始化时去实例化 table 列表的临时数据\n\tconst [tableList, setTableList] = useState({//👇同时管理两个数据的方式, 这样就不需要声明两个 useState\n\t\tlist:[],\t//文章列表 \n\t\tcount:0\t\t//文章总数，结合下边的 table 分页来配置！（⚡️总数 / 每页显示的数量）\n\t})\n\n\t//步骤一(2): 参数管理：（状态、分页）会影响到 table 列表的数据变化的都需要定义一个变量来管理\n\tconst [params, setParams] = useState({ //params 用作 api 发送请求的携带参数\n\t\tpage:1,\t\t\t//当前页\n\t\tper_page:5,\t//每页显示条数, 结合下边的 table 分页来配置！（⚡️总数 / 每页显示的数量）\n\t})\n\n\n\tuseEffect(() => {\n\t\t//步骤二: 声明一个异步函数调用后端接口（🌟传参的方式, 有依赖项 params, 需要写在 useEffect 内部[原则: 只要异步函数内涉及到需要依赖一些数据的变化而重新执行的，都要放到 useEffect 内）\n\t\t//⚡️⚡️⚡️这种情况如果写到函数外边的话，每次组件更新都会重新进行 useEffect 函数的初始化，这会非常消耗性能！！写到 useEffect 中，只有依赖项变化才会执行函数\n\t\tconst loadTableList = async() => {\n\t\t\tconst ref = await http.get('/mp/articles', { params })//params 为当前页数, 这种为携带请求参数的写法\n\t\t\t//方法一：用了两次 ref, 比较耗费性能\n\t\t\tsetTableList({\t//⚡️用 hook 来把从 api 中获取的数据放入 tableList 中, 总共获取两组数据！通过一个对象来承载！\n\t\t\t\tlist:ref.data.results,\n\t\t\t\tcount:ref.data.total_count\n\t\t\t}) \n\t\t\t//方法二：先解构赋值再调用，节省性能\n\t\t\t// const { result, total_count } = ref.data\n\t\t\t// setTableList({\n\t\t\t// \tlist: result,\n\t\t\t// \tcount: total_count\n\t\t\t// })\n\t\t}\n\t\tloadTableList()\n\t},[params]) //删选、过滤的本质也是修改依赖项，让 useEffect 重新调接口\n\n\n\n\t//步骤四: 定义点击筛选按钮触发的函数, 点击后修改携带的参数 {params} 来去给后端发送请求\n\tconst onFilter = (values) => {\n\t\tconsole.log(values) //返回的是一个对象，包含了所有筛选信息\n\t\tconst {channel_id, date, status} = values //解构出【筛选项】的数据\n\t\t\n\t\t//⚡️⚡️⚡️⚡️用来收集筛选项数据，然后重新传递给后端口 api 来发起请求\n\t\tconst btn_params = {}   \n\t\t\n\t\tif(status !== -1){  //如果不是全集(status = -1 的情况)，则表示有筛选项\n\t\t\tbtn_params.status = status;\n\t\t}\n\t\tif(channel_id){   //如果 channel_id 有值\n\t\t\tbtn_params.channel_id = channel_id;\n\t\t}\n\t\tif(date){//如果 date 有值\n\t\t//筛选日期 begin_pubdate、end_pubdate 为后端定义的要求，format('YYYY-MM-DD') 为格式化为后端要求的格式\n\t\tbtn_params.begin_pubdate = date[0].format('YYYY-MM-DD');//开始时间格式化年月日\n\t\tbtn_params.end_pubdate = date[1].format('YYYY-MM-DD');//开始时间格式化年月日\n\t\t}\n\t\t\n\t\t//⚡️⚡️⚡️⚡️将收集来的筛选项数据用 hook 方法修改给 params\n\t\tsetParams({\n\t\t\t...params,\n\t\t\t...btn_params\n\t\t}) //🍎setState 的方法是整体覆盖, 所以这里需要合并 【page、count 两个参数】 + 【btn_params 过滤按钮增加的参数】\n\t\n\t}\n\t\n\t\n\t//🔥🔥🔥点击分页器改变当前页面的事件\n\tconst pageChange = (page) => { //ant 会返回当前 page 的值\n\t\n\t\tsetParams({ //一变化就会重新发送请求\n\t\t\t...params,\n\t\t\tpage //🔥把新的 page 输入传回给 params，这样重新渲染为当前对应的分页（因为依赖项是 params 的变化！）\n\t\t})\n\t}\n\n\n\t//❌删除 table 内 Article 数据的方法\n\tconst deleteArticle = async(data) => {\n\t\tawait http.delete(`/mp/articles/${data.id}`)//⚡️⚡️获取当前列的 id , 调用删除接口 并提交给后端！\n\t\tconsole.log(data);\n\t\tconsole.log(\"成功发送删除接口\")\n\n\t\t//删除后更新视图\n\t\tsetParams({\n\t\t\t...params,\n\t\t\tpage:1 //删除后重新获取第一页数据\n\t\t})\n\t}\n\n\n\t//🖌跳转到 article 去编辑\n\tconst navigate = useNavigate()//🔥🔥🔥🔥🔥注意，【hook 函数】只能放在函数外边，不能放里边！\n\n\tconst goToPublish = (data) => {\n\t\t//跳转到编辑页\n\t\tnavigate(`/publish?id=${data.id}`) //传入当前的列表 id\n\t}\n\n\t\n\t\n\t\n\t//🔥🔥很关键，这里为 table 的数据结构(包含了删除按钮！), 其中的 key 跟后端返回的 key 匹配的\n\tconst columnsTitle = [ \n\t\t{\n\t\t\ttitle:'封面',\n\t\t\tdataIndex: 'cover',\n\t\t\twidth:120,\n\t\t\trender:cover=>{\n\t\t\t\treturn <img src={ cover || img404 } width={148} height={98} alt=\"\" style={{borderRadius:12}}/>\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\ttitle: '标题',\n\t\t\tdataIndex: 'title',\n\t\t\twidth: 220\n\t\t  },\n\t\t  {\n\t\t\ttitle: '状态',\n\t\t\tdataIndex: 'status',\n\t\t\trender: data => <Tag color=\"green\">审核通过</Tag>\n\t\t  },\n\t\t  {\n\t\t\ttitle: '发布时间',\n\t\t\tdataIndex: 'pubdate'\n\t\t  },\n\t\t  {\n\t\t\ttitle: '阅读数',\n\t\t\tdataIndex: 'read_count'\n\t\t  },\n\t\t  {\n\t\t\ttitle: '评论数',\n\t\t\tdataIndex: 'comment_count'\n\t\t  },\n\t\t  {\n\t\t\ttitle: '点赞数',\n\t\t\tdataIndex: 'like_count'\n\t\t  },\n\t\t  {\n\t\t\ttitle: '操作',//渲染操作按钮！！\n\t\t\trender: data => {\n\t\t\t  return (\n\t\t\t\t<Space size=\"middle\">\n\t\t\t\t\t{/* 点击编辑按钮后，跳转到发布页，需要携带【当前列表的 id 参数】*/}\n\t\t\t\t    <Button \n\t\t\t\t\t\ttype=\"primary\" \n\t\t\t\t\t\tshape=\"circle\" \n\t\t\t\t\t\ticon={<EditOutlined />} \n\t\t\t\t\t\tonClick={()=>goToPublish(data)}//🍎绑定跳转功能, 需要传入 data, 获取当前列的 id\n\t\t\t\t\t\t/>\n\n\t\t\t\t    \t\t{/* 用 pop 组件包裹 button, 点击删除按钮后2会唤起 pop 确认提示 */}\n\t\t\t\t\t<Popconfirm \n\t\t\t\t\t\ttitle=\"Confirm to delete article？\" \n\t\t\t\t\t\tplacement=\"topRight\"\n\t\t\t\t\t\tonConfirm={()=>deleteArticle(data)} //🍎需要二次确认的写法, 在 pop 上进行确认\n\t\t\t\t\t\tokText=\"Confirm\"\n\t\t\t\t\t\tcancelText=\"Cancel\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{/* 点击删除按钮后, 获取当前列的 id, 调用删除 api 接口请求, 更新渲染视图 */}\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\t\tdanger \n\t\t\t\t\t\t\t\tshape=\"circle\"\n\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\n\t\t\t\t\t\t\t\t//🍎不用二次确认的写法: onClick={()=>deleteArticle(data)}//获得当前列的 data, 传入到删除方法当中\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Popconfirm>\n\t\t\t\t</Space>\n\t\t\t  )\n\t\t\t}\n\t\t  }\n\t]\n\n\t//🔥这里只是静态数据，不会让组件动态的更新 (只是个 mock，用 hook 从后端调用后可以干掉！)\n\t// const data = [\n\t// \t{\n\t// \t\tid:'8218',\n\t// \t\tcomment_count: 0,\n\t// \t\tcover: {\n\t// \t\t  images:['https://images.unsplash.com/photo-1656215662310-26e0ef491d5d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=928&q=80'],\n\t// \t\t},\n\t// \t\tlike_count: 0,\n\t// \t\tpubdate: '2019-03-11 09:00:00',\n\t// \t\tread_count: 2,\n\t// \t\tstatus: 2,\n\t// \t\ttitle: 'wkwebview离线化加载h5资源解决方案' \n\t// \t}\n\t// ]\n\n\n\n\treturn (\n\t\t<div>\n\t\t\t{/* 顶部筛选区域 —————————————————————————————————————————————————————————— */}\n\t\t\t<Card \n\t\t\t\t// 顶部导航\n\t\t\t\ttitle={\n\t\t\t\t\t<Breadcrumb separator=\">\">\n\t\t\t\t\t\t{/* 🍞面包屑导航 */}\n\t\t\t\t\t\t<Breadcrumb.Item>  <Link to=\"/\"> Home </Link>  \n\t\t\t\t\t\t</Breadcrumb.Item>\n\t\t\t\t\t\t<Breadcrumb> Context Management </Breadcrumb>\n\t\t\t\t\t</Breadcrumb>\n\t\t\t\t}\n\t\t\t\tstyle={{ margin:\"0.75rem\", marginBottom:\"1.5rem\", borderRadius:\"1rem\"}}\n\t\t\t\t>\n\t\t\t\t\t\n\t\t\t\t{/* 过滤项, 🔥🔥🔥onFinish 是用来搜集表单组件内的所有值 */}\n\t\t\t\t<Form  onFinish={onFilter} initialValues={{status:null}}>\n\t\t\t\t\t<Form.Item babel=\"状态\" name=\"status\" style={{marginLeft:\"0.75rem\"}}>\n\t\t\t\t\t\t<Radio.Group>\n\t\t\t\t\t\t\t<Radio value={null}>All</Radio>\n\t\t\t\t\t\t\t<Radio value={0}>Draft</Radio>\n\t\t\t\t\t\t\t<Radio value={1}>Pending</Radio>\n\t\t\t\t\t\t\t<Radio value={2}>Approved</Radio>\n\t\t\t\t\t\t\t<Radio value={3}>Rejection</Radio>\n\t\t\t\t\t\t</Radio.Group>\n\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t{/* 下拉选择器 */}\n\t\t\t\t\t<Form.Item label=\"Channel\" name=\"channel_id\" style={{marginLeft:\"0.75rem\"}} >\n\t\t\t\t\t\t<Select placeholder=\"Select article channel\" style={{width:'18rem'}}>\n\n\t\t\t\t\t\t\t{/* //👇👇👇渲染下拉菜单的频道列表 -- 步骤四：渲染筛选下拉菜单的数据 */}\n\t\t\t\t\t\t\t{/* 数据存在函数的写法 */}\n\t\t\t\t\t\t\t{/* {channelList.map( channel =>\n\t\t\t\t\t\t\t\t<Option value={channel.id} key={channel.id}> {channel.name} </Option>\n\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t\t{/* 数据存在 mobx Store 的写法 */}\n\t\t\t\t\t\t\t{channelStore.channelList.map( channel => \n\t\t\t\t\t\t\t\t<Option value={channel.id} key={channel.id}> {channel.name} </Option>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t{/*  */}\n\t\t\t\t\t<Form.Item label=\"Date\" name=\"date\" style={{marginLeft:\"0.75rem\"}}>\n\t\t\t\t\t\t{/* 传入 locale 语言属性 */}\n\t\t\t\t\t\t<RangePicker locale={locale}></RangePicker>\n\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" style={{marginLeft:\"0.75rem\"}}>筛选</Button>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t{/* 注意，要用个总的 Form 来包裹子集！ */}\n\t\t\t\t</Form>\n\t\t\t</Card>\n\n\n\t\t\t{/* table 内的文章列表区域 ——————————————————————————————————————————————————————————*/}\n\t\t\t<Card title={`根据筛选条件共查询到 ${tableList.count} 条结果：`} style={{borderRadius:\"1rem\"}}>\n        \t\t<Table \n\t\t\t\t\trowKey=\"id\" \n\t\t\t\t\tcolumns={columnsTitle}  //表格的整体解构数据\n\t\t\t\t\t// dataSource={data} \t//文章的信息数据 (Mock 的数据)\n\n\t\t\t\t\t// 👇👇👇步骤四: 渲染 table 内的文章列表\n\t\t\t\t\tdataSource={tableList.list}\n\t\t\t\t\t\n\t\t\t\t\t//🌟🌟配置分页\n\t\t\t\t\tpagination={{\n\t\t\t\t\t\t\tpageSize: params.per_page, \n\t\t\t\t\t\t\ttotal:    tableList.count,\n\t\t\t\t\t\t\tonChange: pageChange\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/>   \n      \t\t</Card>\n\t\t</div>\n\t)\n}\n\n// export default Article\nexport default observer(Article)//注意，实时同步 mobx 的数据要加 observe\n\n\n\n\n\n\n\n","/Users/Youzen/Desktop/Backstage-exercise/src/pages/Login/index.js",[],[],"/Users/Youzen/Desktop/Backstage-exercise/src/utils/index.js",[],[],"/Users/Youzen/Desktop/Backstage-exercise/src/components/EchartBar/index.js",["98"],[],"//封装图表组件\n\n//⚡️需要 【标题 title】，横向数据 【xData】，纵向数据 【yData】， 样式 【style】 可以定制\n\nimport * as echarts from 'echarts' //表示所有的导出都会放在 echarts 这个对象上\nimport { useEffect, useRef } from 'react'\n\n\n\nfunction Bar({title, xData, yData, style}){\n\tconst domRef = useRef()\n\n\tconst chartInit = () => {\n\t\t// 基于准备好的dom，初始化echarts实例\n\t\tconst myChart = echarts.init(domRef.current); //⚡️用 domRef 这个阶段来渲染图表！\n\t\t// 绘制图表\n\t\tmyChart.setOption({\n\t\t\ttitle: {\n\t\t\t\t// text:满意度\n\t\t\t\ttext: title\n\t\t\t},\n\t\t\ttooltip: {},\n\t\t\txAxis: {\n\t\t\t\t// data: ['衬衫', '羊毛衫', '雪纺衫', '裤子', '高跟鞋', '袜子']\n\t\t\t\tdata:xData\n\t\t\t},\n\t\t\tyAxis: {},\n\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\tname: '销量',\n\t\t\t\ttype: 'bar',\n\t\t\t\t// data: [5, 20, 36, 10, 10, 20]\n\t\t\t\tdata:yData\n\t\t\t\t}\n\t\t\t]\n\t\t})\n\t}\n\n\n\t//选择一个时机执行初始化的图标\n\tuseEffect(()=>{\n\t\tchartInit();\n\t},[])//[]空依赖，只执行一次\n\n\treturn( \n\t\t<div>\n\t\t\t{/* 👇准备一个用来挂载 DOM 节点的 ref 元素 */}\n\t\t\t<div \n\t\t\t\tref={domRef} \n\t\t\t\t// style={{width:\"500px\", height:\"400px\"}}\n\t\t\t\tstyle={style}\n\t\t\t\t>\n\t\t\t</div> \n\t\t</div>\n\t)\n}\n\n\nexport default Bar ","/Users/Youzen/Desktop/Backstage-exercise/src/store/index.js",[],[],"/Users/Youzen/Desktop/Backstage-exercise/src/utils/token.js",[],[],"/Users/Youzen/Desktop/Backstage-exercise/src/utils/http.js",[],[],"/Users/Youzen/Desktop/Backstage-exercise/src/store/login.Store.js",[],[],"/Users/Youzen/Desktop/Backstage-exercise/src/store/userInfoStore.js",[],[],"/Users/Youzen/Desktop/Backstage-exercise/src/store/channel.Store.js",[],[],{"ruleId":"99","severity":1,"message":"100","line":1,"column":10,"nodeType":"101","messageId":"102","endLine":1,"endColumn":23},{"ruleId":"99","severity":1,"message":"103","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":25,"column":46,"nodeType":"106","messageId":"107","endLine":25,"endColumn":48},{"ruleId":"99","severity":1,"message":"108","line":53,"column":9,"nodeType":"101","messageId":"102","endLine":53,"endColumn":15},{"ruleId":"99","severity":1,"message":"109","line":3,"column":40,"nodeType":"101","messageId":"102","endLine":3,"endColumn":54},{"ruleId":"99","severity":1,"message":"110","line":10,"column":8,"nodeType":"101","messageId":"102","endLine":10,"endColumn":12},{"ruleId":"99","severity":1,"message":"111","line":11,"column":10,"nodeType":"101","messageId":"102","endLine":11,"endColumn":23},{"ruleId":"112","severity":1,"message":"113","line":43,"column":4,"nodeType":"114","endLine":43,"endColumn":6,"suggestions":"115"},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'params' is assigned a value but never used.","'LogoutOutlined' is defined but never used.","'Item' is defined but never used.","'useNavigation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chartInit'. Either include it or remove the dependency array.","ArrayExpression",["116"],{"desc":"117","fix":"118"},"Update the dependencies array to be: [chartInit]",{"range":"119","text":"120"},[753,755],"[chartInit]"]